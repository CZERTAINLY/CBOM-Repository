openapi: 3.1.1
info:
  title: CBOM-Repository Service API
  description: |-
    REST API for uploading, retrieving and searching of cryptographic software bill of materials documents.
    A cryptographic software bill of materials document adheres to CycloneDX schema version 1.6.

  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com

  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CBOM-Repository/blob/main/LICENSE.md
  version: 0.1.0

externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com

paths:
  /api/v1/bom:
    post:
      summary: Upload a BOM
      operationId: uploadBOM
      requestBody:
        required: true
        content:
           application/vnd.cyclonedx+json:
            schema:
              $schema: https://json-schema.org/draft/2020-12/schema
              type: string
              format: binary

      responses:
        '201':
          description: BOM created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BOMCreateResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict (e.g. BOM with same serialNumber/version already exists)
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '415':
          description: Unsupported media type (e.g. wrong content type, or unsupported CDX version)
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: General Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    get:
      summary: Search BOMs created after a timestamp
      operationId: getBOMs
      parameters:
        - name: after
          in: query
          description: Unix timestamp
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Array of BOM entries (serialNumber + version)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOMEntry'
        default:
          description: General Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

  /api/v1/bom/{urn}:
    get:
      summary: Retrieve a BOM by URN
      operationId: getBOMByUrn
      parameters:
        - name: urn
          in: path
          description: Unique resource identifier (URN), corresponds to CycloneDX serial number.
          required: true
          schema:
            type: string
            example: "urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"
        - name: version
          in: query
          description: Optional `version`. If omitted, returns latest version.
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Requested BOM
          content:
            application/vnd.cyclonedx+json:
              schema:
                type: string
                format: binary
        '404':
          description: BOM not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: General Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"

components:
  schemas:

    BOMEntry:
      type: object
      required:
        - serialNumber
        - version
      properties:
        serialNumber:
          type: string
          description: BOM serial number
          example: "urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"
        version:
          type: string
          description: BOM Version - number or `original` string
          example: "1"

    BOMCreateResponse:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: object
      description: Response returned after uploading a BOM.
      properties:
        serialNumber:
          type: string
          description: CycloneDX serial number (URN, RFC-4122).
          example: "urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"
        version:
          type: integer
          description: CycloneDX integer version number for the BOM document
          example: 1
      required: [serialNumber, version]
      additionalProperties: false

    # RFC 9457 Problem Details (JSON only)
    ProblemDetails:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: object
      description: Problem Details per RFC 9457 (application/problem+json).
      properties:
        type:
          type: string
          format: uri-reference
          description: A URI reference that identifies the problem type. Defaults to "about:blank".
          example: "https://example.com/problems/invalid-payload"
        title:
          type: string
          description: Short, human-readable summary of the problem type.
          example: "Invalid payload"
        status:
          type: integer
          description: HTTP status code for this occurrence of the problem.
          example: 400
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence.
          example: "The 'serialNumber' field is missing."
        instance:
          type: string
          format: uri-reference
          description: A URI reference that identifies the specific occurrence of the problem.
          example: "urn:uuid:4b96f3f7-0c2a-43f7-9c0a-7b0b6a3e2a61"
      additionalProperties: true



