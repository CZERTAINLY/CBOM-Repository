// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"fmt"
	"io"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Response returned after uploading a BOM.
// Ref: #/components/schemas/BOMCreateResponse
type BOMCreateResponse struct {
	// CycloneDX serial number (URN, RFC-4122).
	SerialNumber string `json:"serialNumber"`
	// CycloneDX integer version number for the BOM document.
	Version int `json:"version"`
}

// GetSerialNumber returns the value of SerialNumber.
func (s *BOMCreateResponse) GetSerialNumber() string {
	return s.SerialNumber
}

// GetVersion returns the value of Version.
func (s *BOMCreateResponse) GetVersion() int {
	return s.Version
}

// SetSerialNumber sets the value of SerialNumber.
func (s *BOMCreateResponse) SetSerialNumber(val string) {
	s.SerialNumber = val
}

// SetVersion sets the value of Version.
func (s *BOMCreateResponse) SetVersion(val int) {
	s.Version = val
}

func (*BOMCreateResponse) uploadBOMRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type GetBOMByUrnBadRequest Error

func (*GetBOMByUrnBadRequest) getBOMByUrnRes() {}

type GetBOMByUrnNotFound Error

func (*GetBOMByUrnNotFound) getBOMByUrnRes() {}

type GetBOMByUrnOKApplicationJSON string

func (*GetBOMByUrnOKApplicationJSON) getBOMByUrnRes() {}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type UploadBOMBadRequest Error

func (*UploadBOMBadRequest) uploadBOMRes() {}

type UploadBOMConflict Error

func (*UploadBOMConflict) uploadBOMRes() {}

type UploadBOMReq struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s UploadBOMReq) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}
